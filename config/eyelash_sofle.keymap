#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

&lt { flavor = "balanced"; };

&mt { flavor = "balanced"; };

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        softoff {
            bindings = <&soft_off>;
            key-positions = <14 28 40>;
        };

        M2 {
            bindings = <&mo 2>;
            key-positions = <56 57>;
        };

        left_reset {
            bindings = <&sys_reset>;
            key-positions = <14 40 18 44>;
        };

        reset_right {
            bindings = <&sys_reset>;
            key-positions = <20 46 24 50>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&gresc      &kp N1     &kp N2        &kp N3        &kp N4     &kp N5    &kp UP_ARROW     &kp N6  &kp N7     &kp N8           &kp N9       &kp N0           &kp BACKSPACE
&kp TAB     &kp Q      &kp W         &kp E         &kp R      &kp T     &kp DOWN_ARROW   &kp Y   &kp U      &kp I            &kp O        &kp P            &kp BSLH
&mo 1       &kp A      &kp S         &kp D         &kp F      &kp G     &kp LEFT_ARROW   &kp H   &kp J      &kp K            &kp L        &kp SEMI         &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C         &kp V      &kp B     &kp RIGHT_ARROW  &kp N   &kp M      &kp COMMA        &kp DOT      &kp FSLH         &mt RIGHT_SHIFT ENTER
&kp C_MUTE  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_GUI  &kp SPACE  &mo 1     &kp ENTER        &mo 2   &kp SPACE  &lt 1 RIGHT_GUI  &lt 1 SPACE  &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "-_0_x_x_-";
        };

        layer1 {
            bindings = <
&kp GRAVE   &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &mmv MOVE_UP     &kp F6          &kp F7          &kp F8        &mt F11 F9       &mt F12 F10       &kp DELETE
&trans      &trans  &trans  &trans  &trans  &trans    &mmv MOVE_DOWN   &none           &none           &none         &none            &kp MINUS         &kp EQUAL
&trans      &trans  &trans  &trans  &trans  &trans    &mmv MOVE_LEFT   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &trans  &trans  &trans  &trans  &trans    &mmv MOVE_RIGHT  &none           &none           &none         &none            &none             &trans
&kp C_MUTE  &trans  &trans  &trans  &trans  &trans    &mkp LCLK        &trans          &trans          &trans        &trans           &trans
            >;

            display-name = "-_x_1_x_-";
            sensor-bindings = <&scroll_encoder>;
        };

        layer2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                         &rgb_ug RGB_SPI  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp K_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans                               &rgb_ug RGB_SPD  &none                 &none                 &none       &none         &kp UNDER     &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &rgb_ug RGB_COLOR_HSB(116,100,50)    &rgb_ug RGB_EFR  &kp LEFT              &kp DOWN              &kp UP      &kp RIGHT     &kp LBRC      &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &rgb_ug RGB_COLOR_HSB(0,0,59)        &rgb_ug RGB_EFF  &none                 &none                 &none       &none         &none         &trans
&trans     &trans        &trans          &trans        &trans        &trans                               &rgb_ug RGB_TOG  &trans                &trans                &trans      &trans        &trans
            >;

            display-name = "-_x_x_2_-";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "layer3";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "layer4";
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
